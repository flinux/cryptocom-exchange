trigger:
- master

schedules:
- cron: "0 0 * * *"
  displayName: Daily test run
  branches:
    include:
    - master
  always: true

variables:
- name: CRYPTOCOM_API_KEY_37
  value: cUUmJiS8NQsuYFUF1vZCnF
- name: CRYPTOCOM_API_SECRET_37
  value: WDmJT8PDczwAMLqd14KaXE
- name: CRYPTOCOM_API_KEY_38
  value: M36gizdCPiPtpPxZksA3bW
- name: CRYPTOCOM_API_SECRET_38
  value: zdJVLqb753sGXnD1BcAsfL
- name: CRYPTOCOM_API_KEY_39
  value: pwBURH8tjgynDnvGHFbJAd
- name: CRYPTOCOM_API_SECRET_39
  value: njwzbwZdFbE2DF8NxQnBdJ
- name: CRYPTOCOM_API_KEY_310
  value: U8C56GiAXt2T9h8XtsxoVV
- name: CRYPTOCOM_API_SECRET_310
  value: WVBx5oqUoj5Qr28KHQ7Td9
- name: CC_TEST_REPORTER_ID
  value: 16bcfb0958d99f11456f8d80aeb5800d567724471e151fe6e74a4b329b45dcb6

pool:
  vmImage: 'ubuntu-20.04'

strategy:
 matrix:
    Python37:
      python.version: '3.7'
      env:
        CRYPTOCOM_API_KEY: $(CRYPTOCOM_API_KEY_37)
        CRYPTOCOM_API_SECRET: $(CRYPTOCOM_API_SECRET_37)
    Python38:
      python.version: '3.8'
      env:
        CRYPTOCOM_API_KEY: $(CRYPTOCOM_API_KEY_38)
        CRYPTOCOM_API_SECRET: $(CRYPTOCOM_API_SECRET_38)
    Python39:
      python.version: '3.9'
      env:
        CRYPTOCOM_API_KEY: $(CRYPTOCOM_API_KEY_39)
        CRYPTOCOM_API_SECRET: $(CRYPTOCOM_API_SECRET_39)
    Python310:
      python.version: '3.10'
      env:
        CRYPTOCOM_API_KEY: $(CRYPTOCOM_API_KEY_310)
        CRYPTOCOM_API_SECRET: $(CRYPTOCOM_API_SECRET_310)
steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install wheel
      pip install -U -I -e ".[dev]"
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      chmod +x ./cc-test-reporter
      ./cc-test-reporter before-build
    displayName: 'Install dependencies'

  - script: |
      git pull
      python generatestructs.py
      git config --global user.email "morty.space@gmail.com"
      git config --global user.name "Morty Space"
      git add -A .
      git commit -m "[JOB] Updated API pairs and coins"
      git push origin HEAD:master
    displayName: 'Update API structs'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - script: |
      cd docs && make doctest && cd ..
      pytest -v --cov . --cov-report xml:coverage.xml
      ./cc-test-reporter after-build --exit-code $?
    displayName: 'Run tests'
